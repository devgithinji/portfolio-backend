spring.config.import=optional:file:.env[.properties]

server.port=8080
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.url=${DB_URL}
#hibernate
#spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#spring security
logging.level.org.springframework.security=DEBUG
#dev blog
devto.token=${DEV_TO_TOKEN}
#AWS
aws.accessKeyId=${AWS_ACCESS_KEY_ID}
AWS_REGION=${AWS_REGION}
aws.secretAccessKey=${AWS_SECRET_ACCESS_KEY}
AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
# To prevent maximum upload size limit exception you can make them -1 to be unlimited
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=20MB
#jwt
app.jwt-secret=${JWT_SECRET}
app.jwt-expiration-miliseconds=${JWT_EXPIRATION}
#mail
spring.mail.host=${SMTP_MAIL_HOST}
spring.mail.port=${SMTP_MAIL_PORT}
spring.mail.username=${SMTP_MAIL_USERNAME}
spring.mail.password=${SMTP_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
#cloudinary
cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api_key=${CLOUDINARY_API_KEY}
cloudinary.api_secret=${CLOUDINARY_API_SECRET}
