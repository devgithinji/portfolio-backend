name: portfolio backend CI/CD

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ${{secrets.DOCKERHUB_USERNAME}}/portfolio-backend
      DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
      DOCKERHUB_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}


    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME .

      - name: Log in to Docker Hub
        run: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD

      - name: Push Docker image to Docker Hub
        run: |
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:$GITHUB_SHA
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$GITHUB_SHA

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{secrets.EC2_HOST}}
          username: ${{secrets.EC2_USERNAME}}
          key: ${{secrets.EC2_PRIVATE_KEY}}
          script: |
            # pull docker image
            docker pull ${{secrets.DOCKERHUB_USERNAME}}/portfolio-backend:latest
            # stop docker container
            docker stop portfolio-backend
            # run docker container
            docker run --name portfolio-backend -d --network projectsnet -p ${{ secrets.SERVER_PORT }}:8080 \
              -e DB_USERNAME="${{ secrets.DB_USERNAME }}" \
              -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              -e DB_URL="${{ secrets.DB_URL }}" \
              -e DEV_TO_TOKEN="${{ secrets.DEV_TO_TOKEN }}" \
              -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
              -e AWS_REGION="${{ secrets.AWS_REGION }}" \
              -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
              -e AWS_BUCKET_NAME="${{ secrets.AWS_BUCKET_NAME }}" \
              -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
              -e JWT_EXPIRATION="${{ secrets.JWT_EXPIRATION }}" \
              -e SMTP_MAIL_HOST="${{ secrets.SMTP_MAIL_HOST }}" \
              -e SMTP_MAIL_PORT="${{ secrets.SMTP_MAIL_PORT }}" \
              -e SMTP_MAIL_USERNAME="${{ secrets.SMTP_MAIL_USERNAME }}" \
              -e SMTP_MAIL_PASSWORD="${{ secrets.SMTP_MAIL_PASSWORD }}" \
              -e CLOUDINARY_CLOUD_NAME="${{ secrets.CLOUDINARY_CLOUD_NAME }}" \
              -e CLOUDINARY_API_KEY="${{ secrets.CLOUDINARY_API_KEY }}" \
              -e CLOUDINARY_API_SECRET="${{ secrets.CLOUDINARY_API_SECRET }}" \
              ${{secrets.DOCKERHUB_USERNAME}}/portfolio-backend:latest
            # remove stopped containers and dangling images
            docker container prune -f && docker image prune -f

          
              
